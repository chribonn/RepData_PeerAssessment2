dt = seq(as.Date("2000/1/1"), as.Date("2000/3/31"), by = "day")
dt
val = sample(1:length(dt),1000)
val = sample(1:length(dt),1000,replace=TRUE)
val
val = sample(1:1000,length(dt),replace=TRUE)
val
df <- data.frame(date=dt, reading = val)
df
library(ggplot2)
p <- ggplot(plot3Data, aes(x=date, y = reading))
p <- p + geom_histogram(stat="identity"))
p
p <- ggplot(df, aes(x=date, y = reading))
p <- p + geom_histogram(stat="identity"))
p
p <- p + geom_histogram(stat="identity")
p
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- ggplot(df, aes(x=date, y = reading))
p <- p + geom_histogram(stat="identity")
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p
p <- ggplot(df, aes(x=date, y = reading))
p <- p + geom_histogram(stat="identity")
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + scale_x_date(breaks = "5 days")
p
p <- ggplot(df, aes(x=date, y = reading))
p <- p + geom_histogram(stat="identity")
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + scale_x_date(breaks = "2 days")
p
setwd("E:/Data Science - John Hopkins University/05. Reproducible Research/4. Week 4/RepData_PeerAssessment2")
cleanEVTYPE <- function(df) {
# unfactor the EVTYPE
df$EVTYPE <- as.character(df$EVTYPE)
srch <- c("COASTAL SURGE|MIXED PRECIP|SEICHE|DOWNBURST|WETNESS|STREAM|PRECIPITATION|SHOWER|TIDE|RAIN|DROWNING|FLOOD|SURF|STORM|WAVE|WATER|CURRENTS|WATERSPOUT|MARINE|SEA|SWELL|STREAM FLD|CURRENT",
"AVAL",
"ICE|SNOW|BLIZZARD|FREEZ|FROST|HAIL|HYPOTHERMIA|COLD|LOW TEMPERATURE|SLEET|ICY|HYPERTHERMIA|WINTRY|WINTER",
"DUST|WIND|TYPHOON|TORNADO|HURRICANE|FUNNEL|MICROBURST|GUSTNADO|TORNDAO|TROPICAL|TURBULENCE|LANDSPOUT",
"FOG|DENSE SMOKE",
"HEAT|WARM|HOT|DROUGHT",
"FIRE",
"LIGHTING|LIGHTNING|TSTM|LIGHTING",
"MUD|LANDSLIDES|EROSION|ROCK SLIDE|VOLCANIC ASH|LANDSLUMP|LANDSLIDE|TSUNAMI",
"HIGH|APACHE COUNTY|DAM BREAK|URBAN|GLAZE|HEAVY MIX|COOL AND WET|\\?")
repl <- c("WATER",
"AVALANCHE",
"WEATHER-COLD",
"WIND",
"VISIBILITY",
"WEATHER-HOT",
"FIRE",
"LIGHTING",
"LAND",
"OTHER")
for (i in 1:length(srch)) {
x <- grepl(srch[i], df$EVTYPE, ignore.case = TRUE)
df[x, "EVTYPE"] <- repl[i]
}
df$EVTYPE <- as.factor(df$EVTYPE)
return (df)
}
library(ggplot2)
library(reshape)
zipFileNm <- "./data/StormData.csv.bz2"
dLoadFileNm <- "./data/sourceDt.RData"
data <- read.csv(bzfile(zipFileNm))
# update the date the file was downloaded
downloadDtTm <- format(Sys.time(), "%b %d %Y at %H:%M:%S")
save(downloadDtTm, data, file = dLoadFileNm)
data$BGN_DATE <- strptime(paste(as.Date(data$BGN_DATE, format="%m/%d/%Y"), data$BGN_TIME), format="%Y-%m-%d %H%M")
data$BGN_TIME <- NULL
# Convert certain columns to upper case
data$EVTYPE <- toupper(data$EVTYPE)
data$PROPDMGEXP <- toupper(data$PROPDMGEXP)
data$CROPDMGEXP <- toupper(data$CROPDMGEXP)
data2 <- data[data$INJURIES > 0 | data$FATALITIES>0,c("EVTYPE", "FATALITIES", "INJURIES")]
data2 <- cleanEVTYPE(data2)
data2 <- melt(data2, id=c("EVTYPE"))
names(data2) <- c("EventType","Category","Amount")
p <- ggplot(data2, aes(x=EventType, y=Amount,fill=Category))
p <- p + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + ggtitle("Harmful effects to population health by Event Type") + xlab("Event Category") + ylab("Cost US$")
maxs <- aggregate(Amount ~ EventType, data = data2, FUN = max)
maxr <- order(maxs$Amount, decreasing = TRUE)[1]
sums <- aggregate(Amount ~ EventType, data = data2, FUN = sum)
sums[order(sums$Amount),]
data$CROPDMGEXP <- as.character(data$CROPDMGEXP)
data$CROPDMGEXP[data$CROPDMGEXP == "" | data$CROPDMGEXP == "?"] <- 0
data$CROPDMGEXP[data$CROPDMGEXP == "M"] <- 6
data$CROPDMGEXP[data$CROPDMGEXP == "K"] <- 3
data$CROPDMGEXP[data$CROPDMGEXP == "B"] <- 9
# Adjust the multiplier for the PROPERTY Damage so that it is a number. Clear out erroneus data
data$PROPDMGEXP <- as.character(data$PROPDMGEXP)
data$PROPDMGEXP[data$PROPDMGEXP == "" | data$PROPDMGEXP == "?" | data$PROPDMGEXP == "+" | data$PROPDMGEXP == "-"] <- 0
data$PROPDMGEXP[data$PROPDMGEXP == "M"] <- 6
data$PROPDMGEXP[data$PROPDMGEXP == "K"] <- 3
data$PROPDMGEXP[data$PROPDMGEXP == "B"] <- 9
data$PROPDMGEXP[data$PROPDMGEXP == "H"] <- 2
# Compute the dollar amount for the two type of damage
data$CropDmgTot <- data$CROPDMG * 10 ^ as.numeric(data$CROPDMGEXP)
data$PropDmgTot <- data$PROPDMG * 10 ^ as.numeric(data$PROPDMGEXP)
# Build the multiplier for the damage extimate
data3 <- data[data$CropDmgTot > 0 | data$PropDmgTot > 0,c("EVTYPE", "CropDmgTot", "PropDmgTot")]
data3 <- cleanEVTYPE(data3)
unique(data3$EVTYPE)
data3 <- melt(data3, id=c("EVTYPE"))
names(data3) <- c("EventType","Category","Amount")
p <- ggplot(data3, aes(x=EventType, y=Amount, fill=Category))
p <- p + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + ggtitle("Economic Costs by Event Type") + xlab("Event Category") + ylab("Cost US$")
View(data3)
View(data3)
max2s <- aggregate(Amount ~ EventType, data = data3, FUN = max)
max2s
table(data3)
max2s
maxs <- aggregate(Amount ~ EventType, data = data3, FUN = max)
maxr <- order(maxs$Amount, decreasing = TRUE)[1]
maxs
order(maxs$Amount)
order(maxs$Amount, decreasing = TRUE)
maxr <- order(maxs$Amount, decreasing = TRUE)[1]
maxs[maxr, "EventType"]
